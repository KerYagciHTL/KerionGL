name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Release]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Install deps (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            xorg-dev libx11-dev libxrandr-dev libxinerama-dev \
            libxcursor-dev libxi-dev libgl1-mesa-dev

      # Configure
      - name: Configure (Linux/macOS)
        if: runner.os != 'Windows'
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Configure (Windows)
        if: runner.os == 'Windows'
        run: cmake -S . -B build -A x64

      # Build
      - name: Build (Linux/macOS)
        if: runner.os != 'Windows'
        run: cmake --build build --config ${{ matrix.build_type }} -- -j

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: cmake --build build --config ${{ matrix.build_type }}

      # Test
      - name: Test (Linux/macOS)
        if: runner.os != 'Windows'
        run: ctest --test-dir build --output-on-failure

      - name: Test (Windows)
        if: runner.os == 'Windows'
        run: ctest --test-dir build -C ${{ matrix.build_type }} --output-on-failure
